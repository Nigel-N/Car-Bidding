import Axios from 'axios';
import { useState } from 'react';
import { useEffect } from 'react';

// react-image-gallery
import ImageGallery from 'react-image-gallery';
import 'react-image-gallery/styles/css/image-gallery.css';
import "../../assets/images/css/CustomImageCarousel.css";

// material-ui
import { Typography } from '@mui/material';
import { FormControl } from '@mui/material';
import { InputLabel } from '@mui/material';
import { MenuItem } from '@mui/material';
import { Select } from '@mui/material';
import { Stack } from '@mui/material';
import { Grid } from '@mui/material';
import { TextField } from '@mui/material';
import { Button } from '@mui/material';
import { Box } from '@mui/material';
import { Paper } from '@mui/material';
import { shadows } from '@mui/system';
import { InputAdornment } from '@mui/material';
import { Accordion } from '@mui/material';
import { AccordionSummary } from '@mui/material';
import { AccordionDetails } from '@mui/material';

// ant-icons
import { EditOutlined } from '@ant-design/icons';

// project import
import MainCard from 'components/MainCard';
import ProductFilterSidebar from './ProductFilterSidebar';
import AddDetailsDropdown from './AddDetailsDropdown';

// api url aws
// const url = process.env.REACT_APP_API_URL;
// api url local
const url = "http://localhost:5000";

// ==============================|| HOME PAGE ||============================== //
const BiddingPage = () => {
    // Filter functions ----------------------------------------
    const [openFilter, setOpenFilter] = useState(false);

    const handleOpenFilter = () => {
        setOpenFilter(true);
    };

    const handleCloseFilter = () => {
        setOpenFilter(false);
    };


    // Car bidding data functions ----------------------------------------
    const [biddingCars, setBiddingCars] = useState([]);
    const [biddingImages, setBiddingImages] = useState({});
    const [biddingImages1, setBiddingImages1] = useState([]);
 
    const biddingCarsData = () => {
        const id = 1;
        console.log(url);
        Axios.get(`${url}/biddingCars/${id}`)
        .then((res) => {    
            // Car Bidding Data
            setBiddingCars(res.data);
            
            let ab = {}; // Actual Bid
            let de = {}; // Depreciation Data
            let bb = {}; // Bidding Button Data

                
            res.data.map((car) => {
                // Car Image Data
                let carImageArray = car.CarImageArray.split(",");
                let images = [];

                carImageArray.map((image) => {
                    let newImage = require("assets/images/cars/" + image);
                    let imageSetting = {
                        original: newImage.default,
                        thumbnail: newImage.default 
                    };
                    images.push(imageSetting);
                })

                car.CarImageObject = images;
                console.log('elts');
                console.log(car);
                setBiddingImages(biddingImages[car.BidCarID] = images);

                // Actual Bid
                ab[car.BidCarID] = car.ActualBid;
                // Depreciation Data
                de[car.BidCarID] = car.depreciation;
                // Bidding Button Data
                bb[car.BidCarID] = car.BidStatus;
                
            })
            
            setBiddingImages1(biddingImages["1"]);            
            setActualBid(ab);
            setDepreciation(de);
            setBidButton(bb);

        })
        .catch((error) => {
            console.log(error);
        })

    }


    // Actual Bid/Depreciation functions ----------------------------------------
    const [actualBid, setActualBid] = useState({});
    const [depreciation, setDepreciation] = useState({});

    const handleActualBidChange = (e) => {
        const {name, value} = e.target;
 
        setActualBid((prev) => {
            console.log(value);
            return {...prev, [name]: value}
        })

        setDepreciation((prev) => {
            return {...prev, [name]: Math.round(value * 0.9)}
        })
    }

        
    const handleDepreciationChange = (e) => {
        const {name, value} = e.target;
 
        setDepreciation((prev) => {
            return {...prev, [name]: value}
        })

        setActualBid((prev) => {
            return {...prev, [name]: Math.round(value * 0.9)}
        })
    }

    // Submit/Edit bid functions ----------------------------------------
    const [bidButton, setBidButton] = useState({});

    const handleSubmitBid = (e) => {
        const {name} = e.target;

        Axios.post(`${url}/biddingCars`,
        {
            bidCarId: name,
            userId: 1,
            actualBid: actualBid[name],
            depreciation: depreciation[name]
        }
        )
        .then(response => {
            response.status === 200 ? console.log("Bid Submitted") : console.log("form failed")
            
            if (response.status === 200) {
                setBidButton((prev) => {
                    return {...prev, [name]: "pending"}
                })
                console.log(response);
            }
            else if (response.status === 401 || response.status === 501) {
                console.log("Invalid bidding parameters");
            }
            else {
                console.log("Random error occured");
            }

        })
        .catch((error) => console.log(error)) 
    }

    const handleEditBid = (e) => {
        const {name} = e.target;

        // Axios.put('http://localhost:5000/biddingCars',
        // {
        //     userId: 1,
        //     carId: name,
        //     actualBid: actualBid[name]
        // }
        // )
        // .then(response => {
        //     response.status === 200 ? console.log("Bid Submitted") : console.log("form failed")
            
        //     if (response.status === 200) {
        //         setBidButton((prev) => {
        //             console.log(name);
        //             return {...prev, [name]: "pending"}
        //         })
        //         console.log(response.status);
        //     }
        //     else if (response.status === 401 || response.status === 501) {
        //         console.log("Invalid bidding parameters");
        //     }
        //     else {
        //         console.log("Random error occured");
        //     }

        // })
        // .catch((error) => console.log(error)) 
    }


    useEffect(() => {
        biddingCarsData();
    }, []);


    return (
        <>
            {/* ==============================|| FUNCTION BAR ||============================== */}
            <Stack direction="row" flexWrap="wrap-reverse" alignItems="center" justifyContent="flex-end" sx={{ mb: 0 }}>
                <Stack direction="row" spacing={1} flexShrink={0} sx={{ my: 1 }}>
                    <ProductFilterSidebar
                    isOpenFilter={openFilter}
                    onOpenFilter={handleOpenFilter}
                    onCloseFilter={handleCloseFilter}
                    />
                </Stack>
            </Stack>

            {/* ==============================|| ROWS OF CARS ||============================== */}
            <Grid container spacing={2}>
                {biddingCars.map((car) => (
                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>
                        <Box sx={{ boxShadow: 1, borderRadius: 2}}>
                            <MainCard border={true}>

                                {/* MAIN STACK START */}
                                <Stack>

                                    {/* STACK ITEM 1 - TITLE ROW */}
                                    <h3>{car.CarMake} {car.CarModel} | #{String(car.BidCarID).padStart(4, '0')}</h3>

                                    {/* STACK ITEM 2 - CONTENT ROW */}
                                    {/* CONTENT GRID START */}
                                    <Grid container rowSpacing={5} columnSpacing={1}>

                                        {/* GRID ITEM 1 - CAR IMAGE CAROUSEL */}
                                        <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>
                                            <div style={{ width: "100%", height: "100%" }}>
                                                <ImageGallery 
                                                    items={biddingImages1}
                                                    showPlayButton={false} 
                                                    showNav={false}
                                                />
                                            </div>
                                        </Grid>
                                        
                                        {/* GRID ITEM 2 - CAR INFORMATION */}
                                        <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>
                                            <Grid container direction="row" justifyContent="center" alignItems="center">
                                            
                                                {/* Left Column */}
                                                <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>
                                                    <Stack spacing={2}>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Mileage</Typography>
                                                            <Typography variant="subtitle1">{car.Mileage.toLocaleString("en-US")} km</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Vehicle Code</Typography>
                                                            <Typography variant="subtitle1">{car.VehicleCode}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Min.PARF</Typography>
                                                            <Typography variant="subtitle1">${car.MinPARF.toLocaleString("en-US")}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Ownership</Typography>
                                                            <Typography variant="subtitle1">{car.Ownership}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Color</Typography>
                                                            <Typography variant="subtitle1">{car.Color}</Typography>
                                                        </Stack>
                                                    </Stack>
                                                </Grid>

                                                {/* Right Column */}
                                                <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>
                                                    <Stack spacing={2}>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Org. Registration</Typography>
                                                            <Typography variant="subtitle1">{car.OrgRegistration}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap"  }}>Road Tax Expiry</Typography>
                                                            <Typography variant="subtitle1">{car.RoadTaxExpiry}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>COE Expiry</Typography>
                                                            <Typography variant="subtitle1">{car.COEExpiry}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Paper Value</Typography>
                                                            <Typography variant="subtitle1">${car.PaperValue.toLocaleString("en-US")}</Typography>
                                                        </Stack>
                                                        <Stack spacing={0} justifyContent="center" alignItems="center">
                                                            <Typography variant="h6" sx={{ color: "LightSlateGrey", whiteSpace: "nowrap" }}>Manu.Year</Typography>
                                                            <Typography variant="subtitle1">{car.ManuYear}</Typography>
                                                        </Stack>
                                                    </Stack>
                                                </Grid>

                                            </Grid>

                                        </Grid>

                                    </Grid>
                                    {/* CONTENT GRID END */}

                                    {/* STACK ITEM 3 - SHOW MORE DROPDOWN*/}
                                    <Box pb={3} pt={3}>
                                        <AddDetailsDropdown car={car}/>
                                    </Box>

                                    {/* STACK ITEM 4 - INPUT & BUTTON ROW */}
                                    <Stack direction={{ xs: 'column', sm: 'column', md: 'column', lg: 'row', xl: 'row' }} spacing={3} justifyContent="space-between">

                                        {/* Actual Bid input */}
                                        <TextField
                                            label="Actual Bid"
                                            InputProps={{
                                                startAdornment: <InputAdornment position="start">$</InputAdornment>,
                                            }}
                                            fullWidth
                                            name={car.BidCarID}
                                            value={actualBid[car.BidCarID]}
                                            onChange={handleActualBidChange}
                                        />

                                        {/* Depreciation input */}
                                        <TextField
                                            label="Depreciation"
                                            InputProps={{
                                                startAdornment: <InputAdornment position="start">$</InputAdornment>,
                                            }}
                                            fullWidth
                                            
                                            name={car.BidCarID}
                                            value={depreciation[car.BidCarID]}
                                            onChange={handleDepreciationChange}
                                        />

                                        {/* Bidding button */}
                                        {car.BidStatus == "pending" ? 
                                            <Button variant="contained" sx={{ whiteSpace: "nowrap"}} name={car.BidCarID} onClick={handleEditBid} color="warning"><EditOutlined /></Button> : 
                                            bidButton[car.BidCarID] == "pending" ? 
                                                <Button variant="contained" sx={{ whiteSpace: "nowrap"}} name={car.BidCarID} onClick={handleEditBid} color="warning"><EditOutlined /></Button> : 
                                                <Button variant="contained" sx={{ whiteSpace: "nowrap"}} name={car.BidCarID} onClick={handleSubmitBid}>Submit</Button>}

                                    </Stack>
                                    
                                </Stack>
                                {/* MAIN STACK END */}

                            </MainCard>
                        </Box>
                    </Grid>
                ))}
            </Grid>
        </>
    );
};

export default BiddingPage;